{"version":3,"sources":["Header.js","axios.js","TinderCards.js","SwipeButtons.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","src","alt","instance","axios","create","baseURL","TinderCards","useState","people","setpeople","useEffect","a","get","req","data","fetchData","map","person","index","preventSwipe","onSwipe","dir","nameToDelete","name","console","log","onCardLeftScreen","style","backgroundImage","imgUrl","SwipeButtons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAwBeA,MAlBf,WACE,OACE,sBAAKC,UAAU,SAAf,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAYC,SAAS,QAAQF,UAAU,kBAEzC,qBACEA,UAAU,cACVG,IAAI,mEACJC,IAAI,KAEN,cAACH,EAAA,EAAD,UACE,cAAC,IAAD,CAAWC,SAAS,QAAQF,UAAU,sB,kECV/BK,E,OALEC,EAAMC,OAAO,CAE1BC,QAAS,mDCsDEC,MAtDf,WAAwB,IAAD,EACOC,mBAAS,IADhB,mBACdC,EADc,KACNC,EADM,KA2BrB,OAxBAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACoBR,EAAMS,IAAI,iBAD9B,OACQC,EADR,OAGEJ,EAAUI,EAAIC,MAHhB,4CADc,uBAAC,WAAD,wBAOdC,KACC,IAiBD,qBAAKlB,UAAU,cAAf,SACE,qBAAKA,UAAU,4BAAf,SACGW,EAAOQ,KAAI,SAACC,EAAQC,GAErB,OACE,cAAC,IAAD,CACErB,UAAU,QAEVsB,aAAc,CAAC,KAAM,QACrBC,QAAS,SAACC,GAAD,OAxBQC,EAwBaL,EAAOM,UAvB7CC,QAAQC,IAAI,aAAeH,GADd,IAAYA,GAyBjBI,iBAAkB,kBAnBRH,EAmByBN,EAAOM,UAlBlDC,QAAQC,IAAIF,EAAO,qBADF,IAACA,GAcZ,SAOE,qBACEI,MAAO,CAAEC,gBAAgB,OAAD,OAASX,EAAOY,OAAhB,MACxBhC,UAAU,OAFZ,SAIE,6BAAKoB,EAAOM,UATTN,EAAOM,c,6FCTTO,MAtBf,WACI,OACE,sBAAKjC,UAAU,eAAf,UACE,cAACC,EAAA,EAAD,CAAYD,UAAU,sBAAtB,SACE,cAAC,IAAD,CAAYE,SAAS,YAEvB,cAACD,EAAA,EAAD,CAAYD,UAAU,oBAAtB,SACE,cAAC,IAAD,CAAWE,SAAS,YAEtB,cAACD,EAAA,EAAD,CAAYD,UAAU,oBAAtB,SACE,cAAC,IAAD,CAAcE,SAAS,YAEzB,cAACD,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACE,cAAC,IAAD,CAAcE,SAAS,YAEzB,cAACD,EAAA,EAAD,CAAYD,UAAU,yBAAtB,SACE,cAAC,IAAD,CAAaE,SAAS,gBCTjBgC,MAXf,WACE,OAEE,cADA,CACA,OAAKlC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCSmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.90208a26.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ForumIcon from \"@material-ui/icons/Forum\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <IconButton>\r\n        <PersonIcon fontSize=\"large\" className=\"header_icon\" />\r\n      </IconButton>\r\n      <img\r\n        className=\"header_logo\"\r\n        src=\"https://1000logos.net/wp-content/uploads/2018/07/tinder-logo.png\"\r\n        alt=\"\"\r\n      ></img>\r\n      <IconButton>\r\n        <ForumIcon fontSize=\"large\" className=\"header_icon\"></ForumIcon>\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import axios from 'axios';\r\n\r\n//set up baseURL\r\nconst instance = axios.create({\r\n    // baseURL: 'http://localhost:8001'\r\n    baseURL: 'https://tinder-clone-backend2711.herokuapp.com'\r\n})\r\n\r\nexport default instance;","import React, { useState, useEffect } from \"react\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport \"./TinderCards.css\";\r\nimport axios from './axios'; //custom axios with basurl setup\r\n\r\nfunction TinderCards() {\r\n  const [people, setpeople] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData(){\r\n      const req = await axios.get('/tinder/cards');\r\n\r\n      setpeople(req.data);\r\n    }\r\n\r\n    fetchData();\r\n  }, []); //it is a hook which will only be executed once\r\n\r\n  const swiped = (direction, nameToDelete) => {\r\n    console.log(\"removing: \" + nameToDelete);\r\n    // setLastDirection(direction);\r\n    // alredyRemoved.push(nameToDelete);\r\n  };\r\n\r\n  const outOfFrame = (name) => {\r\n    console.log(name + \" left the screen!\");\r\n    // charactersState = charactersState.filter(\r\n    //   (character) => character.name !== name\r\n    // );\r\n    // setCharacters(charactersState);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tindercards\">\r\n      <div className=\"tinderCards_cardContainer\">\r\n        {people.map((person, index) => {\r\n        //   {console.log(person.name)}\r\n        return (\r\n          <TinderCard\r\n            className=\"swipe\"\r\n            key={person.name}\r\n            preventSwipe={[\"up\", \"down\"]}\r\n            onSwipe={(dir) => swiped(dir, person.name)}\r\n            onCardLeftScreen={() => outOfFrame(person.name)}\r\n          >\r\n            <div\r\n              style={{ backgroundImage: `url(${person.imgUrl})` }}\r\n              className=\"card\"\r\n            >\r\n              <h3>{person.name}</h3>\r\n            </div>\r\n          </TinderCard>\r\n        );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TinderCards;\r\n","import React from 'react';\r\nimport \"./SwipeButtons.css\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nfunction SwipeButtons() {\r\n    return (\r\n      <div className=\"swipeButtons\">\r\n        <IconButton className=\"swipeButtons_repeat\">\r\n          <ReplayIcon fontSize=\"large\"></ReplayIcon>\r\n        </IconButton>\r\n        <IconButton className=\"swipeButtons_left\">\r\n          <CloseIcon fontSize=\"large\"></CloseIcon>\r\n        </IconButton>\r\n        <IconButton className=\"swipeButtons_star\">\r\n          <StarRateIcon fontSize=\"large\"></StarRateIcon>\r\n        </IconButton>\r\n        <IconButton className=\"swipeButtons_right\">\r\n          <FavoriteIcon fontSize=\"large\"></FavoriteIcon>\r\n        </IconButton>\r\n        <IconButton className=\"swipeButtons_lightning\">\r\n          <FlashOnIcon fontSize=\"large\"></FlashOnIcon>\r\n        </IconButton>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default SwipeButtons\r\n","import \"./App.css\";\nimport Header from \"./Header\";\nimport TinderCards  from \"./TinderCards\";\nimport SwipeButtons from \"./SwipeButtons\";\n\nfunction App() {\n  return (\n    // BEM class naming convention\n    <div className=\"app\">\n      <Header></Header>\n      <TinderCards></TinderCards>\n      <SwipeButtons></SwipeButtons>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}